package com.mx.itzamna.eschoolmx.model;
// Generated 12/04/2015 11:30:10 PM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name="users"
    ,catalog="villaeducativa"
    , uniqueConstraints = {@UniqueConstraint(columnNames="email"), @UniqueConstraint(columnNames="username")} 
)
public class Users  implements java.io.Serializable {


     private Integer id;
     private String username;
     private String password;
     private String email;
     private String activkey;
     private Date createAt;
     private Date lastvisitAt;
     private int superuser;
     private int status;
     private Profiles profiles;

    public Users() {
    }

	
    public Users(String username, String password, String email, String activkey, Date createAt, Date lastvisitAt, int superuser, int status) {
        this.username = username;
        this.password = password;
        this.email = email;
        this.activkey = activkey;
        this.createAt = createAt;
        this.lastvisitAt = lastvisitAt;
        this.superuser = superuser;
        this.status = status;
    }
    public Users(String username, String password, String email, String activkey, Date createAt, Date lastvisitAt, int superuser, int status, Profiles profiles) {
       this.username = username;
       this.password = password;
       this.email = email;
       this.activkey = activkey;
       this.createAt = createAt;
       this.lastvisitAt = lastvisitAt;
       this.superuser = superuser;
       this.status = status;
       this.profiles = profiles;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    
    @Column(name="username", unique=true, nullable=false, length=20)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }

    
    @Column(name="password", nullable=false, length=128)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="email", unique=true, nullable=false, length=128)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="activkey", nullable=false, length=128)
    public String getActivkey() {
        return this.activkey;
    }
    
    public void setActivkey(String activkey) {
        this.activkey = activkey;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_at", nullable=false, length=19)
    public Date getCreateAt() {
        return this.createAt;
    }
    
    public void setCreateAt(Date createAt) {
        this.createAt = createAt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="lastvisit_at", nullable=false, length=19)
    public Date getLastvisitAt() {
        return this.lastvisitAt;
    }
    
    public void setLastvisitAt(Date lastvisitAt) {
        this.lastvisitAt = lastvisitAt;
    }

    
    @Column(name="superuser", nullable=false)
    public int getSuperuser() {
        return this.superuser;
    }
    
    public void setSuperuser(int superuser) {
        this.superuser = superuser;
    }

    
    @Column(name="status", nullable=false)
    public int getStatus() {
        return this.status;
    }
    
    public void setStatus(int status) {
        this.status = status;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="users")
    public Profiles getProfiles() {
        return this.profiles;
    }
    
    public void setProfiles(Profiles profiles) {
        this.profiles = profiles;
    }




}


